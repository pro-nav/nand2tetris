// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=rA, b=rB, c=rC, d=rD, e=rE, f=rF, g=rG, h=rH);
    RAM512(in=in, load=rA, address=address[3..11], out=orA);
    RAM512(in=in, load=rB, address=address[3..11], out=orB);
    RAM512(in=in, load=rC, address=address[3..11], out=orC);
    RAM512(in=in, load=rD, address=address[3..11], out=orD);
    RAM512(in=in, load=rE, address=address[3..11], out=orE);
    RAM512(in=in, load=rF, address=address[3..11], out=orF);
    RAM512(in=in, load=rG, address=address[3..11], out=orG);
    RAM512(in=in, load=rH, address=address[3..11], out=orH);

    Mux8Way16(a=orA, b=orB, c=orC, d=orD, e=orE, f=orF, g=orG, h=orH, sel=address[0..2], out=out);
    
}